var menuList = new Array(), menuIndex = 0, currentTab = null; var mainPlatform = { initIndex: function (c) { var a = mini.get("main_tabs"); var b = { name: "first", url: c.href, title: c.text, iconCls: c.iconCls }; a.addTab(b); a.activeTab(b) }, initMenu: function () { this._createTopMenu(); this.bindEvent() }, bindEvent: function () { var b = this; $(document).on("click", ".pf-nav-item", function () { $(".pf-nav-item").removeClass("current"); $(this).addClass("current"); var d = $(this).data("sort"); b._createSiderMenu(SystemMenu[d], d); $(".pf-sider[arrindex=" + d + "]").find(".sider-nav li.current").find(".sider-nav-s").slideDown(500) }); $(document).on("click", ".sider-nav .pf-menu-title", function () { if (!$(this).closest("li").hasClass("current") || $(this).closest("li").find(".sider-nav-s").css("display") == "none") { $(this).closest(".pf-sider").find(".sider-nav li").removeClass("current"); $(this).closest(".pf-sider").find(".sider-nav li").find(".sider-nav-s").hide(500); $(this).closest("li").addClass("current"); $(this).closest("li").find(".sider-nav-s").slideDown(500) } if ($(this).closest(".no-child").size() > 0) { var h = $(this).find(".sider-nav-title-id").text(); var g = $(this).find(".sider-nav-title").text(); var d = $(this).closest(".no-child").data("href"); var f = $(this).find(".sider-nav-title-icon").text(); var e = $(this).find(".sider-nav-title-iconCls").text(); mainPlatform.addMainTabs({ id: h, text: g, url: d, icon: f, iconCls: e }) } }); $(document).on("click", ".toggle-icon", function () { $(this).closest("#pf-bd").toggleClass("toggle"); $(window).resize(); mini.layout() }); $(document).ready(function () { mini.get("tabsMenu").on("beforeopen", function (d) { currentTab = mini.get("main_tabs").getTabByEvent(d.htmlEvent); if (!currentTab) { d.cancel = true } }); $("#close_current").on("click", function () { if (currentTab.name != "first") { mini.get("main_tabs").removeTab(currentTab) } }); $("#close_all").on("click", function () { var d = []; d.push(mini.get("main_tabs").getTab("first")); mini.get("main_tabs").removeAll(d) }); $("#close_other").on("click", function () { var d = [currentTab]; d.push(mini.get("main_tabs").getTab("first")); mini.get("main_tabs").removeAll(d) }) }); $(".pf-logout a").on("click", function () { mini.confirm("确定退出系统吗？", "确定？", function (d) { if (d == "ok") { mini.mask({ el: document.body, cls: "mini-mask-loading", html: "正在退出..." }); $.ajax({ url: "../../Account/UserLogout", type: "post", success: function (h, e, f) { mini.unmask(); var g = JSON.parse(arguments[2].responseText); if (g.isSuccess) { location.href = "../../" } }, error: function (e, g, f) { mini.unmask(); mini.alert("退出错误！") } }) } }); $(".messager-window").find(".l-btn-small").eq(0).addClass("l-btn-selected") }); $(document).on("click", ".pf-nav-prev,.pf-nav-next", function () { if ($(this).hasClass("disabled")) { return } if ($(this).hasClass("pf-nav-next")) { c++; $(".pf-nav").stop().animate({ "margin-top": -70 * c }, 200); if (c == a) { $(this).addClass("disabled"); $(".pf-nav-prev").removeClass("disabled") } else { $(".pf-nav-prev").removeClass("disabled") } } else { c--; $(".pf-nav").stop().animate({ "margin-top": -70 * c }, 200); if (c == 0) { $(this).addClass("disabled"); $(".pf-nav-next").removeClass("disabled") } else { $(".pf-nav-next").removeClass("disabled") } } }); $(window).resize(function () { $(".tabs-panels").height($("#pf-page").height() - 46); $(".panel-body").not(".messager-body").height($(".easyui-dialog").height) }).resize(); var c = 0, a = ($(".pf-nav").height() / 70) - 1; if (a === 0) { $(".pf-nav-prev,.pf-nav-next").hide() } }, setMsgts: function (a) { if (a == 0 || !a) { $("#msgts").removeClass("msgts"); $("#msgts").html("") } else { $("#msgts").addClass("msgts"); $("#msgts").html(a) } }, _createTopMenu: function () { var d = "", b = 0; for (var c = 0, a = SystemMenu.length; c < a; c++) { d += '<li class="pf-nav-item project" data-sort="' + c + '" data-menu="system_menu_' + c + '">' + '<a href="javascript:;">' + '<span class="iconfont-nav">'; if (SystemMenu[c].icon == "iconfont") { d += '<i class="iconfont ' + SystemMenu[c].iconCls + '"></i>' } else { if (SystemMenu[c].icon == "fontawesome") { d += '<i class="fa ' + SystemMenu[c].iconCls + '"></i>' } else { d += '<span class="miniui-icon ' + SystemMenu[c].iconCls + '"></span>' } } d += '<span class="pf-nav-title">' + SystemMenu[c].text + "</span>" + "</a>" + "</li>"; if (SystemMenu[c].isChecked) { b = c; this._createSiderMenu(SystemMenu[c], c) } } $(".pf-nav").html(d); $(".pf-nav-item").eq(b).addClass("current"); $(".pf-sider[arrindex=" + b + "]").find(".sider-nav li.current").find(".sider-nav-s").slideDown(500) }, _createSiderMenu: function (b, f) { $(".pf-sider").hide(); if ($(".pf-sider[arrindex=" + f + "]").size() > 0) { $(".pf-sider[arrindex=" + f + "]").show(); return false } var j = '<h2 class="pf-model-name">' + '<span class="iconfont-model">'; if (b.icon == "iconfont") { j += '<i class="iconfont ' + b.iconCls + '"></i>' + "</span>" } else { if (b.icon == "fontawesome") { j += '<i class="fa ' + b.iconCls + '"></i>' + "</span>" } else { j += '<span class="' + b.iconCls + '"></span>' } } j += '<span class="pf-name">' + b.text + "</span>" + '<span class="toggle-icon"></span>' + '</h2><ul class="sider-nav">'; if (b.children.length > 0) { for (var e = 0, g = b.children.length; e < g; e++) { var d = b.children[e], c = ""; var h = ""; if (d.isChecked) { if (d.children && d.children.length > 0) { h = '<li class="current">' } else { h = '<li class="current no-child" data-href="' + d.href + '">' } } else { if (d.children && d.children.length > 0) { h = "<li>" } else { h = '<li class="no-child" data-href="' + d.href + '">' } } h += '<a href="javascript:;" class="pf-menu-title">' + '<span class="iconfont sider-nav-icon">'; if (d.icon == "iconfont") { h += '<i class="iconfont ' + d.iconCls + '"></i>' + "</span>" } else { if (d.icon == "fontawesome") { h += '<i class="fa ' + d.iconCls + '"></i>' + "</span>" } else { h += '<span class="' + d.iconCls + '"></span>' } } h += '<span class="sider-nav-title">' + d.text + "</span>" + '<span class="sider-nav-title-id">' + d.id + "</span>" + '<span class="sider-nav-title-icon">' + d.icon + "</span>" + '<span class="sider-nav-title-iconCls">' + d.iconCls + "</span>" + '<i class="iconfont icon-xiangyou"></i>' + "</a>" + '<ul class="sider-nav-s"><li class="sider-nav-menutree">'; var a = ""; if (d.children.length > 0) { a = this._renderTreeMenu(d.children, f) } c = h + a + "</li></ul></li>"; j += c } } $(".pf-sider-wrap").append($('<div class="pf-sider" arrindex="' + f + '"></div>').html(j + "</ul>")); mini.parse(); this._createTreeMenu(f) }, _renderTreeMenu: function (c, b) { menuList.push(c); var a = ' <ul name="sider-nav-t" id="sider-nav-t-' + b + "-" + menuIndex + '" class="mini-tree"  showTreeIcon="true" textField="text" idField="text" parentField="pid" resultAsTree="false" iconField="iconCls"></ul>'; menuIndex++; 0; return a }, _createTreeMenu: function (a) { for (var b = 0; b < menuList.length; b++) { mini.get("sider-nav-t-" + a + "-" + b).setData(menuList[b]); mini.get("sider-nav-t-" + a + "-" + b).on("nodeclick", function (c) { mainPlatform.addMainTabs({ id: c.node.id, text: c.node.text, url: c.node.href, icon: c.node.icon, iconCls: c.node.iconCls }) }) } menuList = new Array(); menuIndex = 0 }, addMainTabs: function (c) { var d = "tab$" + c.id; var a = mini.get("main_tabs"); var b = a.getTab(d); if (!b) { b = {}; b.name = d; if (c.icon == "iconfont") { b.title = '<span style="width:16px;height:16px;"><i class="iconfont ' + c.iconCls + '"></i></span>' + c.text } else { b.title = c.text; b.iconCls = c.iconCls } b.url = c.url; b.showCloseButton = true; a.addTab(b) } a.activeTab(b) } };